{"version":3,"sources":["adapters/helpers.js","components/SignOut/index.tsx","components/main/index.tsx","static/images/circleOrange.svg","static/images/circleGreen.svg","static/images/circleBlue.svg","components/SignIn/styles.js","components/SignIn/index.tsx","components/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","firestore","SignOut","title","onClick","signOut","then","catch","e","console","log","icon","LogoutOutlined","Index","className","StyledDiv","styled","div","StyledForm","Form","CircleGreenDiv","CircleBlueDiv","Orange","CircleOrangeDiv","Div","StyledInput","Input","StyledButton","Button","SignIn","onFinish","values","a","signInWithEmailAndPassword","username","password","name","initialValues","remember","Item","rules","required","message","type","prefix","UserOutlined","placeholder","LockOutlined","block","htmlType","src","alt","Green","Blue","Components","useState","user","setUser","useEffect","onAuthStateChanged","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAaAA,IAASC,cAXc,CACnBC,OAAQC,0CACRC,WAAY,iCACZC,YAAa,qDACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIZ,I,gBAAMC,EAAOX,IAASW,O,GACLX,IAASY,WACRZ,IAASa,Y,iCCDnBC,EAXC,WAIZ,OACI,cAAC,IAAD,CAASC,MAAM,WAAf,SACI,cAAC,IAAD,CAAQC,QALA,WACZL,EAAKM,UAAUC,MAAK,eAAUC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAIzBG,KAAM,cAACC,EAAA,EAAD,SCG7BC,EAVD,WAEV,OACI,sBAAKC,UAAU,MAAf,UACE,sCACE,cAAC,EAAD,Q,8DCRG,MAA0B,yCCA1B,MAA0B,wCCA1B,MAA0B,uC,gBCInCC,EAAYC,IAAOC,IAAV,sLAQTC,EAAaF,YAAOG,IAAPH,CAAH,4UAYVI,EAAiBJ,IAAOC,IAAV,qFAMdI,EAAgBL,IAAOC,IAAV,sHAIWK,GAGxBC,EAAkBP,IAAOC,IAAV,sFAMfO,EAAMR,IAAOC,IAAV,kRAcHQ,EAAcT,YAAOU,IAAPV,CAAH,2FAMXW,EAAeX,YAAOY,IAAPZ,CAAH,0DCWHa,EAxDA,WACX,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACPjC,EAAKkC,2BAA2BF,EAAOG,SAAUH,EAAOI,UADjD,2CAAH,sDAGd,OACI,cAACpB,EAAD,UACI,eAACS,EAAD,WACI,eAACN,EAAD,CACIkB,KAAK,eACLtB,UAAU,aACVuB,cAAe,CAACC,UAAU,GAC1BR,SAAUA,EAJd,UAMI,cAAC,IAAKS,KAAN,CACIH,KAAK,WACLI,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCAFtC,SAII,cAACjB,EAAD,CACIkB,KAAM,QACNC,OAAQ,cAACC,EAAA,EAAD,CAAc/B,UAAU,wBAChCgC,YAAY,aAEpB,cAAC,IAAKP,KAAN,CACIH,KAAK,WACLI,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCAFtC,SAII,cAAC,IAAD,CACIE,OAAQ,cAACG,EAAA,EAAD,CAAcjC,UAAU,wBAChC6B,KAAK,WACLG,YAAY,eAGpB,cAAC,IAAKP,KAAN,UACI,cAACZ,EAAD,CACIqB,OAAK,EACLL,KAAK,UACLM,SAAS,SACTnC,UAAU,oBAJd,yBASR,cAACS,EAAD,UACI,qBAAK2B,IAAK5B,EAAQ6B,IAAK,aAE3B,cAAC/B,EAAD,UACI,qBAAK8B,IAAKE,EAAOD,IAAK,WAE1B,cAAC9B,EAAD,UACI,qBAAK6B,IAAKG,EAAMF,IAAK,kBCzC1BG,EApBI,WAAO,IAAD,EACGC,mBAAc,MADjB,mBACdC,EADc,KACRC,EADQ,KAQrB,OANAC,qBAAU,WACN3D,EAAK4D,oBAAmB,SAACH,GACrBC,EAAQD,QAEb,IAEIA,EACC,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOI,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,UAKf,cAAC,EAAD,KCdMC,MANf,WACE,OACI,cAAC,EAAD,KCSSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a0150a8.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: \"student-campus.firebaseapp.com\",\n    databaseURL: \"https://student-campus-default-rtdb.firebaseio.com\",\n    projectId: \"student-campus\",\n    storageBucket: \"student-campus.appspot.com\",\n    messagingSenderId: \"241781208381\",\n    appId: \"1:241781208381:web:21b944c26b726c3dae8154\",\n    measurementId: \"G-S8TEJKNG0K\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport const firestore = firebase.firestore();\n","import {auth} from \"../../adapters/helpers\";\r\nimport React from \"react\";\r\nimport {Button, Tooltip} from \"antd\";\r\nimport {LogoutOutlined} from \"@ant-design/icons\";\r\nconst SignOut = () => {\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {}).catch((e) => console.log(e))\r\n    }\r\n    return (\r\n        <Tooltip title=\"Sign Out\">\r\n            <Button onClick={signOut} icon={<LogoutOutlined/>}/>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default SignOut\r\n","import React from 'react';\nimport SignOut from '../SignOut';\n\nconst Index = () => {\n\n    return (\n        <div className=\"App\">\n          <h1>gela</h1>\n            <SignOut />\n        </div>\n    );\n}\n\nexport default Index;\n","export default __webpack_public_path__ + \"static/media/circleOrange.d68d311a.svg\";","export default __webpack_public_path__ + \"static/media/circleGreen.d65937db.svg\";","export default __webpack_public_path__ + \"static/media/circleBlue.d2bd7786.svg\";","import styled from \"styled-components\";\nimport {Button, Form, Input} from \"antd\";\nimport Orange from \"../../static/images/circleOrange.svg\";\n\nconst StyledDiv = styled.div`\n  background: linear-gradient(#FCFCFD, #6EC1E4);\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst StyledForm = styled(Form)`\n  position: relative;\n  width: 100%;\n  box-shadow: 0 24px 56px 0 rgba(5, 57, 236, 0.04);\n  background-color: #FFFFFF99;\n  padding: 2rem 1rem;\n  border-radius: 5px;\n  -webkit-box-shadow: 0 24px 56px 0 rgba(5, 57, 236, 0.04);\n  -moz-box-shadow: 0 24px 56px 0 rgba(5, 57, 236, 0.04);\n  z-index: 1;\n`;\n\nconst CircleGreenDiv = styled.div`\n  position: absolute;\n  bottom: -200px;\n  left: 40px;\n`\n\nconst CircleBlueDiv = styled.div`\n  position: absolute;\n  top: -200px;\n  left: -200px;\n    //background-image: url(${Orange});\n`\n\nconst CircleOrangeDiv = styled.div`\n  position: absolute;\n  bottom: -25px;\n  right: -25px;\n`\n\nconst Div = styled.div`\n  width: 25%;\n  @media only screen and (max-width: 1280px) {\n    width: 40%;\n  }\n  @media only screen and (max-width: 960px) {\n    width: 50%;\n  }\n  @media only screen and (max-width: 600px) {\n    width: 90%;\n  }\n  position: relative;\n`\n\nconst StyledInput = styled(Input)`\n  height: 2.5rem;\n  border-radius: 5px;\n  padding: 2px 5px;\n`\n\nconst StyledButton = styled(Button)`\n  background-color: #6EC1E4;\n`\nexport {\n    StyledDiv,\n    StyledForm,\n    CircleGreenDiv,\n    CircleBlueDiv,\n    CircleOrangeDiv,\n    Div,\n    StyledInput,\n    StyledButton\n}","import React from \"react\";\r\nimport {Form, Input} from 'antd';\r\nimport {auth} from '../../adapters/helpers';\r\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\r\nimport Orange from '../../static/images/circleOrange.svg'\r\nimport Green from '../../static/images/circleGreen.svg'\r\nimport Blue from '../../static/images/circleBlue.svg'\r\nimport {\r\n    CircleBlueDiv,\r\n    CircleGreenDiv,\r\n    CircleOrangeDiv,\r\n    Div,\r\n    StyledButton,\r\n    StyledDiv,\r\n    StyledForm,\r\n    StyledInput\r\n} from './styles'\r\n\r\nconst SignIn = () => {\r\n    const onFinish = async (values: any) => {\r\n        await auth.signInWithEmailAndPassword(values.username, values.password)\r\n    };\r\n    return (\r\n        <StyledDiv>\r\n            <Div>\r\n                <StyledForm\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{remember: true}}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[{required: true, message: 'Please input your Username!'}]}\r\n                    >\r\n                        <StyledInput\r\n                            type={'email'}\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                            placeholder=\"E-mail\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{required: true, message: 'Please input your Password!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <StyledButton\r\n                            block\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"login-form-button\">\r\n                            Log in\r\n                        </StyledButton>\r\n                    </Form.Item>\r\n                </StyledForm>\r\n                <CircleOrangeDiv>\r\n                    <img src={Orange} alt={'orange'}/>\r\n                </CircleOrangeDiv>\r\n                <CircleGreenDiv>\r\n                    <img src={Green} alt={'blue'}/>\r\n                </CircleGreenDiv>\r\n                <CircleBlueDiv>\r\n                    <img src={Blue} alt={'green'}/>\r\n                </CircleBlueDiv>\r\n            </Div>\r\n        </StyledDiv>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React, {useEffect, useState} from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Main from '../components/main'\r\nimport SignIn from '../components/SignIn'\r\nimport {auth} from '../adapters/helpers'\r\n\r\nconst Components = () => {\r\n    const [user, setUser] = useState<any>(null)\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user: any) => {\r\n            setUser(user)\r\n        });\r\n    }, []);\r\n\r\n    return user ? (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <Main/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        ) :\r\n        (<SignIn/>)\r\n}\r\n\r\nexport default Components;\r\n","import React from 'react';\nimport Components from \"./components\";\n\nfunction App() {\n  return (\n      <Components />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}